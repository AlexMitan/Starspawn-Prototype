{"version":3,"file":"./dist/bundle.js","mappings":"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","sources":["webpack://starspawn/./src/GameModule.ts","webpack://starspawn/./src/PlayerModule.ts","webpack://starspawn/./src/modTeaRoom.ts","webpack://starspawn/./src/timing.ts","webpack://starspawn/./src/utils.ts","webpack://starspawn/webpack/bootstrap","webpack://starspawn/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar timing = require(\"./timing\");\nvar Game = /** @class */ (function () {\n    function Game() {\n        this.id = 0;\n        this.entities = [];\n        this.words = {};\n        this.intentsReady = true;\n        this.signalsReady = true;\n        this.queue = []; // [Action*]\n        this.receivers = []; // {on_signalType:func()}\n        this.time = 0;\n        this.focus = null;\n        this.player = null;\n        this.playRandomly = false;\n        // overhaul\n        this.actions = {};\n    }\n    Game.prototype.addEntity = function (entity, parentEntity) {\n        if (parentEntity === void 0) { parentEntity = undefined; }\n        this.entities.push(entity);\n        entity.id = this.id++;\n        if (parentEntity !== undefined) {\n            this.setParent(parentEntity, entity);\n        }\n    };\n    Game.prototype.getById = function (id) {\n        var found = undefined;\n        for (var i = 0; i < this.entities.length; i++) {\n            if (this.entities[i].id === id) {\n                found = this.entities[i];\n            }\n        }\n        if (found === undefined)\n            throw \"object not found with id \" + id;\n        return found;\n    };\n    Game.prototype.getDepth = function (entity) {\n        if (entity.id === undefined)\n            throw \"no id for object \" + entity;\n        var depth = 0;\n        while (this.getParent(entity) !== undefined) {\n            entity = this.getParent(entity);\n            depth += 1;\n        }\n        return depth;\n    };\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // PARENT\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    Game.prototype.addLink = function (fromEntity, toEntity, relation) {\n        // check no existing link\n        for (var _i = 0, _a = this.entities.filter(function (l) { return l.link; }); _i < _a.length; _i++) {\n            var link_1 = _a[_i];\n            if (link_1.from === fromEntity.id && link_1.to === toEntity.id)\n                throw \"Existing link \" + { link: link_1 };\n        }\n        // create link\n        this.id += 1;\n        var link = {\n            link: relation,\n            from: fromEntity.id,\n            to: toEntity.id,\n            id: this.id,\n        };\n        this.addEntity(link);\n        return link;\n    };\n    Game.prototype.findLink = function (fromEntity, toEntity, relation) {\n        var found = undefined;\n        for (var _i = 0, _a = this.entities.filter(function (l) { return l.link; }); _i < _a.length; _i++) {\n            var link = _a[_i];\n            if (link.link === relation && link.from === fromEntity.id && link.to === toEntity.id) {\n                found = link;\n            }\n        }\n        return found;\n    };\n    Game.prototype.removeLink = function (fromEntity, toEntity, relation) {\n        var found = false;\n        for (var _i = 0, _a = this.entities.filter(function (l) { return l.link; }); _i < _a.length; _i++) {\n            var link = _a[_i];\n            if (link.link === relation && link.from === fromEntity.id && link.to === toEntity.id) {\n                found = true;\n                this.deleteById(link.id);\n            }\n        }\n        if (!found)\n            throw \"No link found \" + { fromEntity: fromEntity, toEntity: toEntity, relation: relation };\n    };\n    Game.prototype.setParent = function (parentEntity, childEntity) {\n        if (parentEntity === undefined || parentEntity.id === undefined || this.getById(parentEntity.id) === undefined)\n            throw \"Undefined parent.\";\n        this.unsetParent(childEntity);\n        this.addLink(parentEntity, childEntity, \"parent\");\n    };\n    Game.prototype.setParentById = function (parentId, childId, relation) {\n        if (relation === void 0) { relation = null; }\n        this.setParent(this.getById(parentId), this.getById(childId));\n    };\n    Game.prototype.unsetParent = function (childEntity) {\n        this.unlink(childEntity, \"parent\");\n    };\n    Game.prototype.unlink = function (entity, relation) {\n        if (relation === void 0) { relation = null; }\n        // delete links with given relation\n        for (var _i = 0, _a = this.entities.filter(function (l) { return l.link; }); _i < _a.length; _i++) {\n            var link = _a[_i];\n            if (link.to === entity.id) {\n                if (!relation || link.link === relation)\n                    this.deleteById(link.id);\n            }\n        }\n    };\n    Game.prototype.isParent = function (parentEntity, childEntity) {\n        return this.findLink(parentEntity, childEntity, \"parent\");\n    };\n    Game.prototype.getParent = function (childEntity) {\n        var parent = undefined;\n        for (var _i = 0, _a = this.entities.filter(function (l) { return l.link; }); _i < _a.length; _i++) {\n            var link = _a[_i];\n            if (link.link === \"parent\" && link.to === childEntity.id) {\n                parent = this.getById(link.from);\n            }\n            // console.log(this.entities.filter(l => l.link));\n        }\n        // console.log({ childEntity, parent });\n        return parent;\n    };\n    Game.prototype.getChildrenById = function (id) {\n        return this.getChildren(this.getById(id));\n    };\n    Game.prototype.getChildren = function (entity) {\n        var _this = this;\n        var contents = this.entities.filter(function (e) { return _this.isParent(entity, e); });\n        return contents;\n    };\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    Game.prototype.deleteById = function (id) {\n        // TODO? throw if not found\n        this.entities = this.entities.filter(function (e) { return e.id !== id; });\n    };\n    Game.prototype.isAccessible = function (entity) {\n        if (entity === undefined || this.getParent(entity) === undefined)\n            return true;\n        var parent = this.getParent(entity);\n        var accessible = !parent.closed && !parent.locked;\n        return accessible && this.isAccessible(parent);\n    };\n    Game.prototype.enqueue = function (action, i) {\n        if (i === void 0) { i = -1; }\n        if (i === -1) {\n            this.queue.push(action);\n        }\n        else {\n            this.queue.splice(i, 0, action);\n        }\n    };\n    Game.prototype.emitSignal = function (data) {\n        for (var _i = 0, _a = this.receivers; _i < _a.length; _i++) {\n            var receiver = _a[_i];\n            if (receiver[\"on_\" + data.type]) {\n                receiver[\"on_\" + data.type](data);\n            }\n        }\n    };\n    Game.prototype.getIntents = function () {\n        var _this = this;\n        // get this tick's Actions {aedpcs} for every entity with intent (null or Intent)\n        this.queue = [];\n        this.intentsReady = true;\n        var _loop_1 = function (entity) {\n            var sequence = entity.sequence;\n            // console.log({ sequence })\n            // empty intent\n            if (!sequence || (sequence && sequence.length === 0)) {\n                this_1.intentsReady = false;\n                // hang and reset for player input\n                if (entity.player) {\n                    if (!entity.picking) {\n                        entity.picking = true;\n                        entity.setOptionsUI();\n                    }\n                    setTimeout(function () {\n                        var options = entity.getNextWords();\n                        if (_this.playRandomly) {\n                            if (entity.command.length > 0) {\n                                entity.pickNextWord(Math.floor(Math.random() * (options.length - 1)));\n                            }\n                            else {\n                                entity.pickNextWord(Math.floor(Math.random() * options.length));\n                            }\n                        }\n                        _this.getIntents();\n                    }, 1);\n                }\n            }\n            else if (sequence.length > 0) {\n                // extract actions and enqueue them\n                var ticks = 0;\n                var i = 0;\n                // extract actions until we go over 1 tick\n                while (ticks === 0 && i < sequence.length) {\n                    var action = sequence[i];\n                    this_1.enqueue(action);\n                    // console.log(`queued up`, action);\n                    // queue up actions including the first with duration\n                    if (action.duration <= 0 || action.duration === undefined) {\n                        // instant action, keep queueing\n                        sequence.splice(i, 1);\n                    }\n                    else if (action.duration > 0) {\n                        // action that will be taken multiple times\n                        ticks = action.duration;\n                        // end actions here\n                        if (action.duration <= 1) {\n                            sequence.splice(i, 1);\n                        }\n                        // console.log(`action with ${ticks} duration`, action);\n                        // TODO: make multiple intent declarations possible per tick?\n                        action.duration -= 1;\n                    }\n                    else {\n                        // throw `Not sure what this means`;\n                    }\n                }\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.entities.filter(function (e) { return e.sequence; }); _i < _a.length; _i++) {\n            var entity = _a[_i];\n            _loop_1(entity);\n        }\n        // when ready, propagate signals\n        if (this.intentsReady) {\n            // queue up a tick signal\n            this.queue.push({ signals: [{ type: \"tick\" }] });\n            // newLine(`starting tick ${game.time}`);\n            this.propagateSignals();\n        }\n    };\n    Game.prototype.propagateSignals = function () {\n        // run through signal propagation and clearing, instant\n        this.signalsReady = false;\n        while (!this.signalsReady) {\n            this.signalsReady = true;\n            // for every unpropagated action with signals, propagate and clear signals\n            for (var _i = 0, _a = this.queue.filter(function (a) { return !a.propagated && a.signals && a.signals.length > 0; }); _i < _a.length; _i++) {\n                var action = _a[_i];\n                for (var _b = 0, _c = action.signals; _b < _c.length; _b++) {\n                    var signal = _c[_b];\n                    // new signal to propagate\n                    this.signalsReady = false;\n                    var type = signal.type;\n                    // send to every receiver\n                    for (var _d = 0, _e = this.receivers; _d < _e.length; _d++) {\n                        var receiver = _e[_d];\n                        if (receiver[\"on_\" + type]) {\n                            receiver[\"on_\" + type](signal);\n                        }\n                    }\n                }\n                // mark as propagated\n                action.propagated = true;\n            }\n        }\n        // reset propagation for actions with duration\n        for (var _f = 0, _g = this.queue.filter(function (a) { return a.propagated === true; }); _f < _g.length; _f++) {\n            var action = _g[_f];\n            action.propagated = false;\n        }\n        this.executeNext();\n    };\n    Game.prototype.executeNext = function () {\n        var _this = this;\n        // get next action to execute\n        if (this.queue.length > 0) {\n            var action = this.queue.shift();\n            if (action.func) {\n                if (this.actions[action.func]) {\n                    var func = this.actions[action.func];\n                    if (action.args) {\n                        func.apply(void 0, action.args);\n                    }\n                    else {\n                        func();\n                    }\n                }\n                else {\n                    throw (\"Unknown action \" + action.func + \", args \" + action.args);\n                }\n            }\n            // execute the next instantly or with pause\n            if (action.pause) {\n                setTimeout(function () { _this.executeNext(); }, action.pause);\n            }\n            else {\n                this.executeNext();\n            }\n        }\n        else {\n            // loop again\n            this.time += 1;\n            this.updateUI();\n            this.getIntents();\n        }\n    };\n    Game.prototype.word = function (text) {\n        if (!this.words[text]) {\n            var word = { type: \"word\", baseName: text };\n            this.words[text] = word;\n        }\n        return this.words[text];\n    };\n    Game.prototype.updateUI = function () {\n        this.updateEntityTreeUI();\n        this.updateClockUI();\n    };\n    Game.prototype.updateEntityTreeUI = function () {\n        var _this = this;\n        var ticks = this.time % timing.tps;\n        var hours = Math.floor(this.time / timing.tps / 3600);\n        var minutes = Math.floor(this.time / timing.tps / 60);\n        var seconds = Math.floor(this.time / timing.tps);\n        var game = this;\n        var treeNode = document.getElementById(\"entityTree\");\n        treeNode.innerHTML = \"Time: \" + hours + \":\" + minutes + \":\" + seconds + \":\" + ticks + \"\\n\\n</br>\";\n        function indentedSubtree(entity, depth) {\n            if (depth === void 0) { depth = 0; }\n            if (!entity.baseName || entity.invisible)\n                return null;\n            var healthText = (entity.health > 0 ? \"[\" + \"#\".repeat(entity.health) + \"]\" : \"\");\n            var focusedText = (game.focus === entity.id) ? \"(focused)\" : \"\";\n            var textNode = document.createElement(\"a\");\n            // textNode.style.color = \"lightgrey\";\n            textNode.innerText = \"|\" + \"----\".repeat(game.getDepth(entity)) + entity.baseName + \" \" + healthText + focusedText + \"\\n\";\n            textNode.className = \"treeObject\";\n            if (game.getChildren(entity).length > 0) {\n                for (var _i = 0, _a = game.getChildren(entity).filter(function (e) { return game.isAccessible(e); }); _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    textNode.appendChild(indentedSubtree(child, depth + 1));\n                }\n            }\n            // on click, focus action\n            textNode.addEventListener(\"click\", function (e) {\n                e = window.event || e;\n                if (this === e.target) {\n                    game.focus = entity.id;\n                    game.player.command = [];\n                    game.player.setOptionsUI();\n                }\n                game.updateEntityTreeUI();\n            });\n            return textNode;\n        }\n        for (var _i = 0, _a = this.entities.filter(function (e) { return _this.getDepth(e) === 0; }); _i < _a.length; _i++) {\n            var entity = _a[_i];\n            var subtree = indentedSubtree(entity, 0);\n            if (subtree) {\n                treeNode.appendChild(subtree);\n            }\n        }\n    };\n    Game.prototype.updateClockUI = function () {\n        var clock = document.getElementById(\"clock\");\n        var ctx = clock.getContext(\"2d\");\n        var width = clock.clientWidth;\n        var height = clock.clientHeight;\n        // ctx.stroke = \"white\";\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillText(\"\" + this.time, width / 2 - 6, height / 2 + 5);\n        // dots\n        ctx.save();\n        ctx.translate(width / 2, height / 2);\n        ctx.beginPath();\n        ctx.rotate(-Math.PI / 2);\n        for (var i = 0; i < 12; i++) {\n            ctx.moveTo(20, 0);\n            ctx.lineTo(25, 0);\n            ctx.rotate(2 * Math.PI / 12);\n        }\n        ;\n        ctx.stroke();\n        ctx.restore();\n        // ticks\n        ctx.save();\n        ctx.translate(width / 2, height / 2);\n        ctx.beginPath();\n        ctx.rotate(-Math.PI / 2);\n        ctx.rotate(2 * Math.PI * (this.time) / timing.tps);\n        ctx.arc(10, 0, 2, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.restore();\n        // seconds\n        // ticks\n        ctx.save();\n        ctx.translate(width / 2, height / 2);\n        ctx.beginPath();\n        ctx.rotate(-Math.PI / 2);\n        ctx.rotate(2 * Math.PI * this.time / timing.tps / 60);\n        ctx.moveTo(10, 0);\n        ctx.lineTo(25, 0);\n        ctx.stroke();\n        ctx.restore();\n    };\n    return Game;\n}());\nmodule.exports = { Game: Game };\n","var Player = /** @class */ (function () {\n    function Player(game) {\n        this.baseName = \"player\";\n        this.player = true;\n        this.game = game;\n        this.intent = null; // intent\n        this.sequence = [];\n        this.picking = false;\n        this.command = [];\n        this.patterns = [];\n    }\n    Player.prototype.addPattern = function (pattern) {\n        this.patterns.push(pattern);\n    };\n    Player.prototype.getAllIntents = function () {\n        var intents = [];\n        for (var _i = 0, _a = this.patterns; _i < _a.length; _i++) {\n            var pattern = _a[_i];\n            for (var _b = 0, _c = pattern.intents(); _b < _c.length; _b++) {\n                var intent = _c[_b];\n                intents.push(intent);\n            }\n        }\n        return intents;\n    };\n    //^ getAllIntents(), command\n    Player.prototype.getValidIntents = function () {\n        // get remaining Intents that match the command and focus so far\n        var validIntents = [];\n        for (var _i = 0, _a = this.getAllIntents(); _i < _a.length; _i++) {\n            var intent = _a[_i];\n            // check intent for command validity\n            var cmdValid = true;\n            for (var i = 0; i < this.command.length; i++) {\n                if (intent.representation[i] !== this.command[i]) {\n                    cmdValid = false;\n                }\n            }\n            // check intent for focus validity, if any focus\n            var focusValid = this.game.focus ? false : true;\n            for (var _b = 0, _c = intent.representation; _b < _c.length; _b++) {\n                var entity = _c[_b];\n                if (entity.id === this.game.focus) {\n                    focusValid = true;\n                }\n            }\n            if (cmdValid && focusValid) {\n                validIntents.push(intent);\n            }\n        }\n        return validIntents;\n    };\n    //^ getValidIntents(), command\n    // get options for next word to pick\n    Player.prototype.getNextWords = function () {\n        var options = [];\n        var validIntents = this.getValidIntents();\n        // console.log(`${validIntents.length} valid commands at command ${this.command.map(w => w.baseName)}`)\n        for (var _i = 0, validIntents_1 = validIntents; _i < validIntents_1.length; _i++) {\n            var intent = validIntents_1[_i];\n            // if the intent is the same length as the command, it can be confirmed\n            if (intent.representation.length == this.command.length) {\n                options.push({ baseName: \"> confirm <\", type: \"confirm\" });\n            }\n            else {\n                var newOption = intent.representation[this.command.length];\n                var duplicateThing = false;\n                for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n                    var option = options_1[_a];\n                    if (newOption === option) {\n                        duplicateThing = true;\n                    }\n                }\n                if (!duplicateThing) {\n                    options.push(newOption);\n                }\n            }\n        }\n        if (this.command.length > 0) {\n            options.push({ baseName: \"> cancel <\", type: \"cancel\" });\n        }\n        return options;\n    };\n    //^ updateCommandUI()\n    Player.prototype.pickNextWord = function (optionI) {\n        var options = this.getNextWords();\n        if (options[optionI].type === \"confirm\") {\n            this.setIntent();\n        }\n        else if (options[optionI].type === \"cancel\") {\n            this.command = [];\n            this.game.focus = null;\n        }\n        else {\n            this.command.push(options[optionI]);\n        }\n        this.updateCommandUI();\n    };\n    // getValidIntents(), clearCommand()\n    // set intent and clear the command\n    Player.prototype.setIntent = function () {\n        var _this = this;\n        // get valid intents\n        var intents = this.getValidIntents();\n        // from intents of command's length\n        for (var _i = 0, _a = intents.filter(function (i) { return i.representation.length === _this.command.length; }); _i < _a.length; _i++) {\n            var intent = _a[_i];\n            console.log({ intent: intent, command: this.command });\n            var valid = true;\n            for (var i = 0; i < intent.representation.length; i++) {\n                if (intent.representation[i] !== this.command[i]) {\n                    console.log(\"execution wonk, not one valid action\");\n                    valid = false;\n                }\n            }\n            if (valid) {\n                // set intent, not picking\n                this.sequence = intent.sequence;\n                this.picking = false;\n                this.game.focus = null;\n                // clear command\n                this.command = [];\n                this.updateCommandUI();\n                return;\n            }\n        }\n    };\n    Player.prototype.updateCommandUI = function () {\n        document.getElementById(\"command\").innerHTML = \">\" + this.command.map(function (e) { return e.baseName; }).join(\" \");\n    };\n    Player.prototype.clearOptionsUI = function () {\n        document.getElementById('options').innerHTML = \"\";\n    };\n    Player.prototype.setOptionsUI = function () {\n        var _this = this;\n        document.getElementById('options').innerHTML = \"\";\n        if (!this.picking)\n            return;\n        // get the next words, and create an element for each on document\n        var options = this.getNextWords();\n        var keys = \"abcdefghijklmnopqrstuwxyz\".split(\"\");\n        var _loop_1 = function (i) {\n            var optionText = options[i].baseName;\n            // create a span with the optionText baseName\n            shortcutNode = document.createElement(\"a\");\n            shortcutNode.style.color = \"lightgrey\";\n            shortcutNode.innerText = keys[i] + \") \";\n            // keyboard shortcutNode\n            optionNode = document.createElement(\"a\");\n            optionNode.style.color = \"white\";\n            optionNode.innerText = optionText;\n            shortcutNode.appendChild(optionNode);\n            document.getElementById('options').appendChild(shortcutNode);\n            // when the span is clicked, handle using that optionText\n            // REFACTOR: bad\n            shortcutNode.addEventListener(\"click\", function () {\n                _this.pickNextWord(i);\n                _this.setOptionsUI();\n            });\n            if (options[i].type === \"confirm\") {\n                shortcutNode.className = \"confirm\";\n            }\n            else if (options[i].type === \"cancel\") {\n                shortcutNode.className = \"cancel\";\n            }\n            else {\n                shortcutNode.className = \"choice\";\n            }\n        };\n        var shortcutNode, optionNode;\n        for (var i = 0; i < options.length; i++) {\n            _loop_1(i);\n        }\n    };\n    return Player;\n}());\nmodule.exports = { Player: Player };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils = require(\"./utils\");\nvar timing = require(\"./timing\");\nvar newLine = utils.newLine;\nfunction loadMod(player, game) {\n    game.actions.newLine = utils.newLine;\n    game.actions.wait = function (ticks) {\n        // game.actions.newLine(`Still waiting... of ${ticks}`);\n    };\n    function createNewLineAction(text) {\n        return {\n            func: \"newLine\",\n            args: [text]\n        };\n    }\n    function createWaitAction(ticks) {\n        return {\n            func: \"wait\",\n            args: [ticks],\n            duration: ticks,\n            pause: timing.mpt / Math.pow(ticks, 1),\n        };\n    }\n    // wait various durations\n    player.patterns.push({\n        intents: function () {\n            var intents = [];\n            var durations = [\n                { baseName: \"1 tick\", dur: 1 },\n                { baseName: \"3 ticks\", dur: 3 },\n                { baseName: \"6 ticks\", dur: 6 },\n            ];\n            for (var _i = 0, durations_1 = durations; _i < durations_1.length; _i++) {\n                var duration = durations_1[_i];\n                var intent = {\n                    representation: [game.word(\"wait\"), game.word(duration.baseName)],\n                    sequence: [\n                        createNewLineAction(\"You wait \" + duration.dur + \" ticks.\"),\n                        createWaitAction(duration.dur)\n                    ]\n                };\n                intents.push(intent);\n            }\n            return intents;\n        }\n    });\n    game.actions.fillFrom = function (fluidSourceId, fluidContainerId) {\n        var fluidSource = game.getById(fluidSourceId);\n        var fluidContainer = game.getById(fluidContainerId);\n        var fluid = { baseName: fluidSource.fluidSource, fluid: true, temperature: fluidSource.temperature };\n        newLine(\"You fill up the \" + fluidContainer.baseName + \" from the \" + fluidSource.baseName + \" with \" + fluid.baseName);\n        game.addEntity(fluid);\n        game.setParent(fluidContainer, fluid);\n    };\n    function fluidsIn(fluidContainer) {\n        var fluidChildren = game.getChildren(fluidContainer).filter(function (e) { return e.fluid; });\n        return fluidChildren.length > 0;\n    }\n    // fill container from fluidSource\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.fluidSource; }); _i < _a.length; _i++) {\n                var fluidSource = _a[_i];\n                for (var _b = 0, _c = game.entities.filter(function (e) { return e.fluidContainer && !fluidsIn(e); }); _b < _c.length; _b++) {\n                    var nonEmptyFluidContainer = _c[_b];\n                    intents.push({\n                        representation: [game.word(\"fill\"), nonEmptyFluidContainer, game.word(\"from\"), fluidSource],\n                        sequence: [\n                            createWaitAction(3),\n                            {\n                                func: \"fillFrom\",\n                                args: [fluidSource.id, nonEmptyFluidContainer.id],\n                                duration: 1,\n                            },\n                            createWaitAction(3)\n                        ],\n                    });\n                    // throw \"HALT\"\n                }\n            }\n            return intents;\n        }\n    });\n    game.actions.emptyContainer = function (containerId) {\n        var container = game.getById(containerId);\n        var containerParent = game.getParent(container);\n        newLine(\"You empty the \" + container.baseName + \" on the \" + containerParent.baseName + \".\");\n        for (var _i = 0, _a = game.getChildrenById(containerId); _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (child.fluid) {\n                game.deleteById(child.id);\n            }\n            else {\n                game.setParent(containerParent, child);\n            }\n        }\n    };\n    player.addPattern({\n        // empty container\n        intents: function () {\n            var intents = [];\n            // nonempty fluid containers\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.fluidContainer && game.getChildren(e).length !== 0; }); _i < _a.length; _i++) {\n                var nonEmptyFluidContainer = _a[_i];\n                intents.push({\n                    representation: [game.word(\"empty\"), nonEmptyFluidContainer],\n                    sequence: [\n                        createWaitAction(1),\n                        {\n                            func: \"emptyContainer\",\n                            args: [nonEmptyFluidContainer.id]\n                        },\n                        createWaitAction(1)\n                    ],\n                });\n            }\n            return intents;\n        }\n    });\n    game.actions.pourXintoY = function (sourceId, destinationId) {\n        var source = game.getById(sourceId);\n        var destination = game.getById(destinationId);\n        for (var _i = 0, _a = game.getChildren(source); _i < _a.length; _i++) {\n            var child = _a[_i];\n            newLine(\"You pour the \" + child.baseName + \" from the \" + source.baseName + \" into the \" + destination.baseName + \".\");\n            game.setParent(destination, child);\n        }\n    };\n    player.addPattern({\n        // pour X into Y\n        intents: function () {\n            var intents = [];\n            var isNonEmptyFluidContainer = (function (e) { return (e.fluidContainer && (game.getChildren(e).length !== 0)); });\n            var isEmptyContainer = (function (e) { return (e.fluidContainer && !fluidsIn(e)); });\n            for (var _i = 0, _a = game.entities.filter(isNonEmptyFluidContainer); _i < _a.length; _i++) {\n                var sourceContainer = _a[_i];\n                for (var _b = 0, _c = game.entities.filter(isEmptyContainer); _b < _c.length; _b++) {\n                    var destinationContainer = _c[_b];\n                    intents.push({\n                        representation: [game.word(\"pour\"), sourceContainer, game.word(\"into\"), destinationContainer],\n                        sequence: [{\n                                func: \"pourXintoY\",\n                                args: [sourceContainer.id, destinationContainer.id]\n                            }]\n                    });\n                }\n            }\n            return intents;\n        }\n    });\n    game.actions.setParentById = function (parentId, childId, rel) { return game.setParentById(parentId, childId, rel); };\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.item && game.isAccessible(e); }); _i < _a.length; _i++) {\n                var entity = _a[_i];\n                for (var _b = 0, _c = game.entities.filter(function (e) { return e.surface; }); _b < _c.length; _b++) {\n                    var surface = _c[_b];\n                    intents.push({\n                        representation: [game.word(\"put\"), entity, game.word(\"on\"), surface],\n                        sequence: [createNewLineAction(\"You put the \" + entity.baseName + \" on the \" + surface.baseName), {\n                                func: \"setParentById\",\n                                args: [surface.id, entity.id, \"on\"]\n                            }],\n                    });\n                }\n            }\n            return intents;\n        }\n    });\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.infusable && game.isAccessible(e); }); _i < _a.length; _i++) {\n                var infusable = _a[_i];\n                for (var _b = 0, _c = game.entities.filter(function (e) { return e.fluidContainer; }); _b < _c.length; _b++) {\n                    var fluidContainer = _c[_b];\n                    intents.push({\n                        representation: [game.word(\"put\"), infusable, game.word(\"in\"), fluidContainer],\n                        sequence: [{\n                                func: \"setParentById\",\n                                args: [fluidContainer.id, infusable.id, \"in\"]\n                            },\n                            createWaitAction(3)\n                        ]\n                    });\n                }\n            }\n            return intents;\n        }\n    });\n    game.actions.switchActive = function (switchableId) {\n        var switchable = game.getById(switchableId);\n        switchable.active = !switchable.active;\n    };\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.active !== undefined && e.active === false; }); _i < _a.length; _i++) {\n                var entity = _a[_i];\n                intents.push({\n                    representation: [game.word(\"turn on\"), entity],\n                    sequence: [createNewLineAction(\"You turn on the \" + entity.baseName),\n                        {\n                            func: \"switchActive\",\n                            args: [entity.id]\n                        }\n                    ]\n                });\n            }\n            return intents;\n        }\n    });\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.active !== undefined && e.active === true; }); _i < _a.length; _i++) {\n                var entity = _a[_i];\n                intents.push({\n                    representation: [game.word(\"turn off\"), entity],\n                    sequence: [createNewLineAction(\"You turn off the \" + entity.baseName),\n                        {\n                            func: \"switchActive\",\n                            args: [entity.id]\n                        }\n                    ]\n                });\n            }\n            return intents;\n        }\n    });\n    game.actions.tryUnlock = function (chestId, trialPassword) {\n        var chest = game.getById(chestId);\n        if (trialPassword === chest.lockedContainer.password) {\n            chest.locked = false;\n            newLine(\"The locks click open.\");\n        }\n        else {\n            newLine(\"Incorrect password.\");\n        }\n    };\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.lockedContainer && e.locked && game.isAccessible(e); }); _i < _a.length; _i++) {\n                var chest = _a[_i];\n                for (var i0 = 0; i0 < 10; i0++) {\n                    // for (let i1 = 0; i1 < 10; i1++) {\n                    // for (let i2 = 0; i2 < 10; i2++) {\n                    // the sequence\n                    intents.push({\n                        representation: [game.word(\"unlock\"), chest, game.word(String(i0))],\n                        // representation: [game.word(`unlock`), chest, game.word(String(i0)), game.word(String(i1)), game.word(String(i2))],\n                        sequence: [{\n                                func: \"tryUnlock\",\n                                args: [chest.id, \"\" + i0]\n                                // args: [chest.id, `${i0}${i1}${i2}`]\n                            }],\n                    });\n                    // }\n                    // }\n                }\n            }\n            return intents;\n        }\n    });\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.note; }); _i < _a.length; _i++) {\n                var entity = _a[_i];\n                // the sequence\n                intents.push({\n                    representation: [game.word(\"read\"), entity],\n                    sequence: [\n                        createNewLineAction(\"You read the note...\"),\n                        createNewLineAction(\"\" + entity.note.content)\n                    ]\n                });\n            }\n            return intents;\n        }\n    });\n    game.actions.tryOpen = function (entityId) {\n        var entity = game.getById(entityId);\n        if (entity.locked) {\n            newLine(\"The \" + entity.baseName + \" seems to be locked...\");\n        }\n        else {\n            entity.closed = false;\n            newLine(\"You open the \" + entity.baseName);\n            newLine(\"It contains: \" + game.getChildren(entity).map(function (e) { return e.baseName; }).join(\",\"));\n        }\n    };\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.closed && game.isAccessible(e); }); _i < _a.length; _i++) {\n                var entity = _a[_i];\n                intents.push({\n                    representation: [game.word(\"open\"), entity],\n                    sequence: [{\n                            func: \"tryOpen\",\n                            args: [entity.id]\n                        }],\n                });\n            }\n            return intents;\n        }\n    });\n    game.actions.punch = function (attackerId, targetId) {\n        var attacker = game.getById(attackerId);\n        var target = game.getById(targetId);\n        var sounds = [\"POW!\", \"Bam!\", \"Boom!\", \"Zock!\"];\n        newLine(\"You punch the \" + target.baseName + \"! \" + sounds[Math.floor(Math.random() * sounds.length)]);\n        if (target.health < 5) {\n            newLine(\"Some fluff flies out of the ruptures. 1 damage!\");\n            target.health -= 1;\n            game.emitSignal({ type: \"damageDealt\", by: attacker, to: target });\n        }\n    };\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.health > 0; }); _i < _a.length; _i++) {\n                var entity = _a[_i];\n                intents.push({\n                    representation: [game.word(\"attack\"), entity, game.word(\"with fists\")],\n                    sequence: [createWaitAction(5),\n                        {\n                            func: \"punch\",\n                            args: [player.id, entity.id]\n                        },\n                        createWaitAction(2),\n                        {\n                            func: \"punch\",\n                            args: [player.id, entity.id]\n                        },\n                        createWaitAction(2),\n                        {\n                            func: \"punch\",\n                            args: [player.id, entity.id]\n                        },\n                        createWaitAction(2)\n                    ]\n                });\n            }\n            return intents;\n        }\n    });\n    game.actions.sipFrom = function (containerId) {\n        var container = game.getById(containerId);\n        for (var _i = 0, _a = game.getChildren(container).filter(function (e) { return e.fluid; }); _i < _a.length; _i++) {\n            var fluid = _a[_i];\n            if (fluid.turboTea) {\n                newLine(\"You feel like a 400 IQ, cupboard-opening, killing machine! In fact, you feel so good you feel like giving Gardens some feedback on their game!\");\n            }\n            else if (fluid.tea) {\n                newLine(\"It's not too bad. It's... fine.\");\n            }\n            else {\n                newLine(\"It's important to stay hydrated, I guess.\");\n            }\n        }\n    };\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return fluidsIn(e); }); _i < _a.length; _i++) {\n                var nonEmptyFluidContainer = _a[_i];\n                intents.push({\n                    representation: [game.word(\"sip from\"), nonEmptyFluidContainer],\n                    sequence: [\n                        createNewLineAction(\"You sip from the \" + nonEmptyFluidContainer.baseName + \".\"),\n                        createWaitAction(20),\n                        {\n                            func: \"sipFrom\",\n                            args: [nonEmptyFluidContainer.id]\n                        }\n                    ]\n                });\n            }\n            return intents;\n        }\n    });\n    game.actions.readyClaws = function (targetId) {\n        var target = game.getById(targetId);\n        if (target.health === 5)\n            newLine(\"You let out a piercing shriek as you ready your razor-sharp, glassy claws!\");\n        else\n            newLine(\"You ready your claws again!\");\n    };\n    game.actions.claw = function (attackerId, targetId) {\n        var attacker = game.getById(attackerId);\n        var target = game.getById(targetId);\n        newLine(\"You tear out the \" + target.baseName + \"'s insides for 2 damage!\");\n        target.health -= 2;\n        game.emitSignal({ type: \"damageDealt\", by: player, to: target, amount: 2 });\n    };\n    player.addPattern({\n        intents: function () {\n            var intents = [];\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.health > 0; }); _i < _a.length; _i++) {\n                var target = _a[_i];\n                intents.push({\n                    representation: [game.word(\"attack\"), target, game.word(\"with claws\")],\n                    sequence: [\n                        { func: \"readyClaws\", args: [target.id] },\n                        createWaitAction(10),\n                        { func: \"claw\", args: [player.id, target.id] },\n                    ]\n                });\n            }\n            return intents;\n        }\n    });\n    game.receivers.push({\n        on_damageDealt: function (data) {\n            newLine(\"Damage dealt by \" + data.by.baseName);\n            if (data.to.health <= 0 && !data.to.dead) {\n                data.to.dead = true;\n                newLine(\"You have defeated your first enemy, a vile \" + data.to.baseName + \". It drops a teabag!\");\n                data.to.baseName = \"dead \" + data.to.baseName;\n                data.health = undefined;\n                game.addEntity({ baseName: \"VICTORIOUS teabag\", item: true, flammable: true, infusable: true, flavour: \"VICTORY\" }, game.getParent(data.to));\n            }\n        }\n    });\n    game.receivers.push({\n        on_tick: function (data) {\n            var _loop_1 = function (stove) {\n                if (stove.active) {\n                    stove.ctr += 1;\n                    // put out a message regularly\n                    if (stove.ctr >= 20) {\n                        stove.ctr = 0;\n                        newLine(\"The stove's flame burns a warm orange.\");\n                    }\n                    var _loop_2 = function (containerOnStove) {\n                        // newLine(`The stove heats up the ${containerOnStove.baseName}`)\n                        for (var _i = 0, _a = game.entities.filter(function (fluid) { return (fluid.fluid && game.isParent(containerOnStove, fluid)); }); _i < _a.length; _i++) {\n                            var fluid = _a[_i];\n                            // newLine(`The stove heats up the ${fluid.baseName} in the ${containerOnStove.baseName}`);\n                            fluid.temperature += 1;\n                            if (fluid.temperature == 23) {\n                                newLine(\"The \" + containerOnStove.baseName + \" is filled with hot \" + fluid.baseName + \"!\");\n                            }\n                        }\n                    };\n                    // heat up fluid inside containers on stove\n                    for (var _i = 0, _a = game.entities.filter(function (containerOnStove) { return containerOnStove.fluidContainer && game.isParent(stove, containerOnStove); }); _i < _a.length; _i++) {\n                        var containerOnStove = _a[_i];\n                        _loop_2(containerOnStove);\n                    }\n                }\n            };\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.baseName === \"stove\"; }); _i < _a.length; _i++) {\n                var stove = _a[_i];\n                _loop_1(stove);\n            }\n        }\n    });\n    game.receivers.push({\n        on_tick: function (data) {\n            var _loop_3 = function (fluidContainer) {\n                for (var _i = 0, _a = game.entities.filter(function (hotFluid) { return (hotFluid.fluid &&\n                    game.isParent(fluidContainer, hotFluid) &&\n                    hotFluid.temperature > 23); }); _i < _a.length; _i++) {\n                    var hotFluid = _a[_i];\n                    var count = 0;\n                    var prefix = \"\";\n                    // if infusable in container and hot fluid\n                    for (var _b = 0, _c = game.entities.filter(function (e) { return (e.infusable &&\n                        game.isParent(fluidContainer, e)); }); _b < _c.length; _b++) {\n                        var infusingTeabag = _c[_b];\n                        count += 1;\n                        prefix += infusingTeabag.flavour + \" \";\n                        game.emitSignal({ type: \"teaMade\" });\n                        if (count < 3) {\n                            hotFluid.baseName = prefix + \" tea\";\n                            hotFluid.tea = true;\n                        }\n                        else {\n                            hotFluid.baseName = \"TURBO TESTER TEA\";\n                            if (!hotFluid.turboTea) {\n                                hotFluid.turboTea = true;\n                                newLine(\"TOTAL VICTORY ACHIEVED! Enjoy your tea!\");\n                            }\n                        }\n                        // console.log(\"hotFluid\", hotFluid);\n                    }\n                }\n            };\n            for (var _i = 0, _a = game.entities.filter(function (e) { return e.fluidContainer; }); _i < _a.length; _i++) {\n                var fluidContainer = _a[_i];\n                _loop_3(fluidContainer);\n            }\n        }\n    });\n    game.addEntity({\n        type: \"winBehaviourState\",\n        baseName: \"winBehaviourState\",\n        won: false,\n        invisible: true,\n        uberWon: false\n    });\n    game.receivers.push({\n        on_teaMade: function (data) {\n            var state = game.entities.filter(function (e) { return e.type === \"winBehaviourState\"; })[0];\n            if (state.won === false) {\n                newLine(\"Congratulations, you have made tea! Did you find all three teabags? I wonder what happens if you infuse them all at once...\");\n                state.won = true;\n            }\n        }\n    });\n    game.addEntity({\n        baseName: \"timer\",\n        type: \"timer\",\n        invisible: true,\n        time: -1\n    });\n}\nmodule.exports = { loadMod: loadMod };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ticks per second\nexports.tps = 6;\n// milliseconds per tick\nexports.mpt = 5;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction newLine(text) {\n    // var node = document.createElement(\"li\"); // Create a <li> node\n    // var textnode = document.createTextNode(text); // Create a text node\n    // node.appendChild(textnode); // Append the text to <li>\n    var display = document.getElementById('display');\n    display.innerText += \"\\n\" + text;\n    display.scrollTop = display.scrollHeight;\n}\nexports.newLine = newLine;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils = require(\"./utils\");\n// HACK\n// let newLine = utils.newLine;\n// import { newLine } from \"./utils\";\nutils.newLine(\"Test\");\nvar GameModule = require(\"./GameModule\");\nvar game = new GameModule.Game();\nvar PlayerModule = require(\"./PlayerModule\");\nvar player = new PlayerModule.Player(game);\ngame.player = player;\nvar teaRoomMod = require(\"./modTeaRoom\");\nteaRoomMod.loadMod(player, game);\n// let debugMod = require(\"./modDebug\");\n// debugMod.loadMod(player, game);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////  Patterns   ////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\nvar Teapot = /** @class */ (function () {\n    function Teapot() {\n        this.baseName = \"teapot\";\n        this.fluidContainer = true;\n        this.item = true;\n    }\n    return Teapot;\n}());\n// game.addEntity({ baseName: \"rose\", inv: false, weight: 1, smell: \"sweet\" })\n// game.addEntity({ baseName: \"rose\", inv: true, weight: 2, smell: \"sugary\" })\n// game.addEntity({ baseName: \"daisy\", inv: false, weight: 1, smell: \"daisylike\" })\n// game.addEntity({ baseName: \"shrine\", shrine: true })\n// game.addEntity({ baseName: \"crystal\", inv: false, weight: 1 })\n// game.addEntity({ baseName: \"boulder\", weight: 10 })\nvar debug = false;\nif (!debug) {\n    var area = { baseName: \"tea room\" };\n    game.addEntity(area);\n    game.addEntity(player, area);\n    game.addEntity({ baseName: \"stove\", active: false, surface: true, heatSource: true, ctr: 0 }, area);\n    game.addEntity({ baseName: \"faucet\", fluidSource: \"water\", temperature: 20 }, area);\n    game.addEntity({ baseName: \"punching bag\", health: 5 }, area);\n    var cupboard = { baseName: \"tea cupboard\", closed: true };\n    game.addEntity(cupboard, area);\n    game.addEntity(new Teapot(), area);\n    var cranberryTeabag = { baseName: \"cranberry teabag\", item: true, flammable: true, infusable: true, flavour: \"OBVIOUS\" };\n    // let cranberryTeabag = { baseName: `instant noodles`, item: true, flammable: true, infusable: true, flavour: \"salty\" };\n    // game.addEntity(noodles, cupboard);\n    game.addEntity(cranberryTeabag, cupboard);\n    var table = { baseName: \"table\", surface: true };\n    game.addEntity(table, area);\n    game.addEntity({ baseName: \"cup\", fluidContainer: true, item: true }, table);\n    game.addEntity({ baseName: \"bowl\", fluidContainer: true, item: true }, table);\n    var note = { baseName: \"super secret note\", note: { content: \"\\\"The password is 6...\\\"\" } };\n    game.addEntity(note, table);\n    var stain = { baseName: \"oily stain\" };\n    game.addEntity(stain, note);\n    var chest = { baseName: \"chest\", closed: true, locked: true, lockedContainer: { password: \"6\" } };\n    game.addEntity(chest, table);\n    var smallerChest = { baseName: \"smaller chest\", closed: true };\n    game.addEntity(smallerChest, chest);\n    var evenSmallerChest = { baseName: \"even smaller chest\", closed: true };\n    game.addEntity(evenSmallerChest, smallerChest);\n    game.addEntity({ baseName: \"SECRETIVE teabag\", item: true, flammable: true, infusable: true, flavour: \"SECRET\" }, evenSmallerChest);\n}\nelse {\n    var area = { baseName: \"tea room\" };\n    game.addEntity(area);\n    game.addEntity(player, area);\n    game.addEntity({ baseName: \"stove\", active: true, surface: true, heatSource: true, ctr: 0 }, area);\n    game.addEntity({ baseName: \"faucet\", fluidSource: \"water\", temperature: 20 }, area);\n    game.addEntity({ baseName: \"punching bag\", health: 5 }, area);\n    var cupboard = { baseName: \"tea cupboard\", closed: true };\n    game.addEntity(cupboard, area);\n    var teapot = new Teapot();\n    game.addEntity(teapot, area);\n    var cranberryTeabag = { baseName: \"cranberry teabag\", item: true, flammable: true, infusable: true, flavour: \"OBVIOUS\" };\n    // let cranberryTeabag = { baseName: `instant noodles`, item: true, flammable: true, infusable: true, flavour: \"salty\" };\n    // game.addEntity(noodles, cupboard);\n    game.addEntity(cranberryTeabag, teapot);\n    var table = { baseName: \"table\", surface: true };\n    game.addEntity(table, area);\n    game.addEntity({ baseName: \"cup\", fluidContainer: true, item: true }, table);\n    game.addEntity({ baseName: \"bowl\", fluidContainer: true, item: true }, table);\n    var note = { baseName: \"super secret note\", note: { content: \"\\\"The password is 6...\\\"\" } };\n    game.addEntity(note, table);\n    var stain = { baseName: \"oily stain\" };\n    game.addEntity(stain, note);\n    var chest = { baseName: \"chest\", closed: true, locked: true, lockedContainer: { password: \"6\" } };\n    game.addEntity(chest, table);\n    var smallerChest = { baseName: \"smaller chest\", closed: true };\n    game.addEntity(smallerChest, chest);\n    var evenSmallerChest = { baseName: \"even smaller chest\", closed: true };\n    game.addEntity(evenSmallerChest, smallerChest);\n    game.addEntity({ baseName: \"SECRETIVE teabag\", item: true, flammable: true, infusable: true, flavour: \"SECRET\" }, teapot);\n}\n// keyboard mode\nvar keys = \"abcdefghijklmnopqrstuwxyz\".split(\"\");\ndocument.addEventListener('keypress', function (event) {\n    var name = event.key;\n    if (name === \"`\") {\n        game.playRandomly = !game.playRandomly;\n    }\n    if (player.picking && keys.indexOf(name) !== -1) {\n        // alert(`pressed ${keys.indexOf(name)} of ${keys}`)\n        player.pickNextWord(keys.indexOf(name));\n        player.setOptionsUI();\n    }\n}, false);\nplayer.updateCommandUI();\ngame.updateEntityTreeUI();\ngame.getIntents();\nconsole.log({ \"all intents\": player.getAllIntents() });\n// for (let intent of player.getAllIntents()) {\n//     console.log({ intent })\n// }\nfunction debugText(text) {\n    document.getElementById(\"debug\").innerText = text;\n}\n"],"names":["Object","defineProperty","exports","value","timing","Game","this","id","entities","words","intentsReady","signalsReady","queue","receivers","time","focus","player","playRandomly","actions","prototype","addEntity","entity","parentEntity","undefined","push","setParent","getById","found","i","length","getDepth","depth","getParent","addLink","fromEntity","toEntity","relation","_i","_a","filter","l","link","link_1","from","to","findLink","removeLink","deleteById","childEntity","unsetParent","setParentById","parentId","childId","unlink","isParent","parent","getChildrenById","getChildren","_this","e","isAccessible","closed","locked","enqueue","action","splice","emitSignal","data","receiver","type","getIntents","_loop_1","sequence","this_1","picking","setOptionsUI","setTimeout","options","getNextWords","command","pickNextWord","Math","floor","random","ticks","duration","signals","propagateSignals","a","propagated","_b","_c","signal","_d","_e","_f","_g","executeNext","shift","func","args","apply","pause","updateUI","word","text","baseName","updateEntityTreeUI","updateClockUI","tps","hours","minutes","seconds","game","treeNode","document","getElementById","indentedSubtree","invisible","healthText","health","repeat","focusedText","textNode","createElement","innerText","className","child","appendChild","addEventListener","window","event","target","innerHTML","subtree","clock","ctx","getContext","width","clientWidth","height","clientHeight","clearRect","fillText","save","translate","beginPath","rotate","PI","moveTo","lineTo","stroke","restore","arc","module","Player","intent","patterns","addPattern","pattern","getAllIntents","intents","getValidIntents","validIntents","cmdValid","representation","focusValid","validIntents_1","newOption","duplicateThing","options_1","optionI","setIntent","updateCommandUI","console","log","valid","map","join","clearOptionsUI","shortcutNode","optionNode","keys","split","optionText","style","color","utils","newLine","loadMod","createNewLineAction","createWaitAction","mpt","pow","fluidsIn","fluidContainer","fluid","wait","durations_1","dur","fillFrom","fluidSourceId","fluidContainerId","fluidSource","temperature","nonEmptyFluidContainer","emptyContainer","containerId","container","containerParent","pourXintoY","sourceId","destinationId","source","destination","isEmptyContainer","sourceContainer","destinationContainer","rel","item","surface","infusable","switchActive","switchableId","switchable","active","tryUnlock","chestId","trialPassword","chest","lockedContainer","password","i0","String","note","content","tryOpen","entityId","punch","attackerId","targetId","attacker","sounds","by","sipFrom","turboTea","tea","readyClaws","claw","amount","on_damageDealt","dead","flammable","flavour","on_tick","stove","ctr","_loop_2","containerOnStove","_loop_3","hotFluid","count","prefix","won","uberWon","on_teaMade","state","display","scrollTop","scrollHeight","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","area","heatSource","cupboard","table","smallerChest","evenSmallerChest","name","key","indexOf"],"sourceRoot":""}