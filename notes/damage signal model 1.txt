redesigning the Divine Queue.




Entity < Actor|Item|Quality|Intent|Area

Capability
    intents() -> Intent[]

Vertical slices

1) Player equips RedDagger
    Player
    id: 0
    actor:
        intent:
            sequence: Action[]
        moves:
            strike(self, weapon, enemy) - one attack at meleeWeapon -> onAttacked
                at Item.meleeWeapon.damage.meleeDamage + STR
            flurry(self, weapon, enemy) - 3 quick attacks with a melee weapon -> 3* onAttacked
                each at Item.meleeWeapon.damage.meleeDamage + STR/2

    triggers: 
        onGetIntent():
            if intent, else return false
        onHealed(source,who,value):
            if who is me:
                newLine("You heal value" | from source) || greenMessage("You heal")
                getQuality("Health") += value
    
    Health:
        parent: Player
        relation: "Quality"
        value: 500

    Rage:
        parent: Player
        duration: 50
        power: 50
        triggers:
            onGetMulMeleeDamageBonus(who) if parent is who, return [BUFF, +power] 

    Strength:
        parent: Player,
        relation: "BaseStat"
        value: 10
        type: linear
        triggers:
            onGetAddMeleeDamageBonus() return [STAT, +value]

    StrengthCharm
        parent: Player, "activeItem"
        triggers:
            onGetAddMeleeDamageBonus() return [ITEM, +10]
            onGetMulMeleeDamageBonus() return [ITEM, 1]
        moves:
            enrage() apply Rage on self

    RedBlade
    id: 1
    parent: 0
    relation: "activeItem"
    item: true
    moves:
        lifeReap(parent, target) - a potent attack
            and 100% lifesteal
            at WPN_DMG * 2 + STR
            cooldown 10s

    triggers:
        onDamageDealt(n) -> healActor(n/2), emit "onHealed,lifesteal,actor,n/2"

    meleeWeapon:
        speed: 6
        damage: 40 
        type: "piercing"


    Dummy

    onAttacked(attacker, defender, damage, damage.type)

    ^Armor:
        absorbPhysical: 20

    ^Health:
        value: 1000

1.1) On equip, the player can now lifeReap, as well as strike and flurry

    player.intents() -> move, flee, lifeReap, strike, flurry

2) The player launches an attack at Dummy, an Action queued up from a factory

    createStrike(attacker, weapon, defender):
        damageAddIncrease = 0 + sum(emit("getAddMeleeDamageBonus", {who:attacker})
        damageMulIncrease = sum(emit("getMulMeleeDamageBonus", {who:attacker}))

        damage == 50

        return {
            signals: ["Attacked", attacker, defender, damage, damage.type]
            pause: 300
        }

    Intent -> [swing(item.speed), createStrike(self, dummy)]

3) The Dummy reduces the damage

Dummy
    chance to evade: 10%
    absorb: 20 phys    