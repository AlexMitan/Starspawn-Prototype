next: event queueing

Command: [Word*]

Pattern
    actions() => [Action*] 

Actor
    intent: int | Action

Action


Entity
    baseName: str 

Word < Entity

design decisions
    types
        1) set of types[] for components composited into entity
            1b) array of types[] for components composited into entity
        2) bool flag for typeA, typeB, typeC
        3) type: "string"

core:
    JSON objects and states
    systemic behaviors
    linear complexity, cubic depth

next steps:
    visible object tree
    area movement
        one-way, two-way
            A <---> B
            A ----> B
        access
            A x ???    B
            A x------> B
            A ---x---> B
            A ------x> B
    Bootstrap UI
    log items
    on-mouse-over examine - hold mouse over to charge

fancy:
    D3 transitions
